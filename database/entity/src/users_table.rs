//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.6

use super::sea_orm_active_enums::UserStatus;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, serde::Serialize, serde::Deserialize)]
#[sea_orm(table_name = "users_table")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub user_uuid: Uuid,
    pub user_realname: String,
    pub user_email: String,
    pub user_status: UserStatus,
    pub user_password: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation, serde::Serialize, serde::Deserialize)]
pub enum Relation {
    #[sea_orm(has_many = "super::articles_table::Entity")]
    ArticlesTable,
}

impl Related<super::articles_table::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ArticlesTable.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
